

1.To create the database:
#This command was used to run in the L4 folder itself to create a gene sequence database for each genome in the relevant folder

for name in *;do cd $name;makeblastdb -in ${name}.ffn -out ${name}_genes -title ${name} -dbtype nucl; mkdir ${name}_genesDB;mv ${name}_genes* ${name}_genesDB; cd ..;done

2.To make BlASTn
#This command was used to blast multiple ffn files against the gene databases folder. We used for loop with two features: variables and wildcards, to increase the power of the shell.

for g1 in *ffn; do n1=$(basename ${g1} .ffn); for g2 in *ffn;do n2=$(basename ${g2} .ffn);blastn -query ${n1}.ffn -db ../Databases/${n2}_genesDB/${n2}_genes -out ../outputs/${n1}_${n2}_blastn.txt -outfmt 6 -evalue 1e-30 -perc_identity 95;done;done

3.To extract the gene names
#This command was used to extract the gene names. We used for loop with variables and wildcard to run multiple files; the grep command to search for the occurrence of the ">", pipe(|)command (that allows using two or more commands such that output of one command serves as input to the next) and sed command to replace ">", space and everything after space with nothing.

for g1 in *.ffn; do n1=$(basename ${g1} .ffn);grep ">" ${g1} | sed 's/>//g' | sed 's/ .*//g' >> ../headers/${g1}_header.txt;done

4.To look for genes present in genome 1 and not in genome 2
# This command is used to check every single content (line by line) of header file against the blastn output to find the genes that are not present in the blastn output. To run this command first we created temporary folder called "temp", were we copied all the files from header folder and Blastn output.
for g1 in *header.txt;do n1=$(basename ${g1} _header.txt); echo ${n1};for g2 in ${n1}*blastn.txt;do out=$(basename ${g2} _blastn.txt);for item in `cat ${g1}`;do grep "^"${item}$'\t' ${g2}; if ! [[ $? -eq 0 ]]; then echo ${item} >>../not_found/${out}_notFound.txt;fi;done;done;done

5.To make fnaDatabase 
#This command was used to run in the L4 folder itself to create a fna database for each genome in the relevant folder

for name in *;do cd $name;makeblastdb -in ${name}.fna -out ${name}_fna -title ${name} -dbtype nucl; mkdir ${name}_fnaDB;mv ${name}_fna* ${name}_fnaDB; cd ..;done

6.To Blast the not found files with fna Database  
#We used this command to blast the not found files against the fnaDatabse genome 2

blastn -query CHIN_F1_CHIN_F1_notFound.fasta -db /home/aureliana/Documents/Project/Database_fna/CHIN_F1_fnaDB/CHIN_F1_fna -out ../outputs_blastfna/CHIN_F1_CHIN_F1.txt -outfmt 6 -evalue 1e-30 -perc_identity 95


7.To find either pseudogene and deleted in genome 2
# This command is used to check every single content (line by line) of the not found folder against the blastfna output to find pseudogenes and deleted. To run this command, first, we created a temporary folder called "temp", where we copied all the files from the not found folder and Blastfn output.
for g1 in *notFound.txt;do n1=$(basename ${g1} _notFound.txt); echo ${n1};for g2 in ${n1}*blastfna.txt;do out=$(basename ${g2} _blastfna.txt);for item in `cat ${g1}`;do grep "^"${item}$'\t' ${g2}; if [[ $? -eq 0 ]]; then echo ${item} >>../pseudogenes/${out}_pseudo;else echo ${item} >>../deleteds/${out}_deleteds;fi;done;done;done

8. Combined BLAST file used in accessory genome script
# This command was used to run in The BlastOutput folder to combine the BLAST output in one file
cat * >>../combinedBlast.txt

9. List of the genomes used in the accessory genome script
# This command was used to run in the L4folder to generate a list of the genomes
ls > list.txt



